DONE

	Renamed hash_table to session_table and implemented double buffer swap for timeouts without O(n).

	Server was creating the slot sockets, which messed things up. only proxy creates them now.

	Implement test for session table that exercises swap.

	Implement swap every 30 seconds for the session table in the proxy.

	Session table get needs to move the session to current on get from previous.

	Verify a client remains connected across two swaps now.

	Force the next client to use a specific port, and then verify that it can reconnect and get "new client", 60+ seconds after it first connects to the proxy.

	Verified, but had to work around blocking socket recv timeout not working on macos.

	Don't set SO_REUSEPORT or SO_REUSEADDR on sockets unless needed.

	Add packet filter code to proxy.

	Implement code to check non-zero byte packets against the stateless packet filter.

	If the packet fails the stateless packet filter, drop it.

TODO

	Check for valid network next packet types and forward them to the next socket.

	--------------


























	--------------

	Design how we pass network next packets sent by the client to the next server.

	--------------

	Design how the next server knows to pass upgraded direct and client to server packets to the game server,
	via the correct slot packet so it registers as the same client.

	--------------

	Design how the next server receives packets from the server from the slot sockets.

	--------------

	Design how the server sends packets down to the client, via one of the thread sockets.

	--------------

	Fix the dev and server backend 5 so the server can init.

	--------------
