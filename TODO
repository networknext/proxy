DONE

	Renamed hash_table to session_table and implemented double buffer swap for timeouts without O(n).

	Server was creating the slot sockets, which messed things up. only proxy creates them now.

	Implement test for session table that exercises swap.

	Implement swap every 30 seconds for the session table in the proxy.

	Session table get needs to move the session to current on get from previous.

	Verify a client remains connected across two swaps now.

	Force the next client to use a specific port, and then verify that it can reconnect and get "new client", 60+ seconds after it first connects to the proxy.

	Verified, but had to work around blocking socket recv timeout not working on macos.

	Don't set SO_REUSEPORT or SO_REUSEADDR on sockets unless needed.

	Add packet filter code to proxy.

	Implement code to check non-zero byte packets against the stateless packet filter.

	If the packet fails the stateless packet filter, drop it.

	Check for valid network next packet types and print them out.

TODO

	Implement code to handle the direct ping -> direct pong response in the stateless packet handler.

	Forward other network next packets to the next thread, with the address prefixed in the packet before the packet data.

	Implement a server mode when the socket is disabled. Might need to add server options bitfield when creating the server.

	Implement callbacks to insert received packets into the server.

	Implement callbacks to send packets to an address on behalf of the server.

	Create a custom socket on the next thread, and read packets, drop any not coming from the proxy address, then strip off the address/port prefix and insert the received packet into the server.

	Implement code to send packets to the client, via a random one of the proxy sockets.

	--------------

	Get the server actually working

	Verify that network next acceleration works through the proxy.

	--------------

	Load test again in google, to make sure nothing has broken.

	--------------

	Setup a relay in GCore ashburn datacenter (10G).

	Setup a client, server and proxy in GCore (10G).

	Load test in GCore.

	--------------

	Work is done :)

	--------------
