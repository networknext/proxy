DONE

	Sketch out proxy.cpp

	Sketch out proxy.h

	Copy across proxy_linux.h/cpp

	Copy across proxy_macos.h/cpp

	Get proxy_mac actually compiling with proxy_/PROXY_ conversion.

	Get proxy_init / proxy_term working.

	Convert proxy_linux* -> PROXY_/proxy_

	Actually compile on Linux.

	Force create n threads.

	Actually create sockets for n threads.

	Find a way to shut down cleanly.

	Join threads etc. on shutdown.

TODO

	Implement main loop sleep 1 sec and shutdown clean on control-C

	----------

	Implement env var overrides, especially bind address, num threads, thread data bytes

	Implement the proxy to act as a packet reflector (eg. send packet back to sender, initially...)

	Implement a test client so I can test throughput.

	Implement basic throughput test in google cloud. How far can I push it?

	Implement basic throughput test in bare metal.

	Integrate network next server into thread data. Will involve adjusting the SDK so that I can take over packet send/receive on behalf of server, and insert received packets directly into the SDK, and hook a callback for send packets...

	Setup client, proxy, server in google cloud and test throughput.

	Test throughput in GCore bare metal ashburn.

	Done.

	----------
